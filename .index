
<!DOCTYPE HTML>
<html lang="en">
    <head>
        <title>nguyenyennhi</title>
        <meta charset="utf-8"/>
        <meta name="viewport" content="width=device-width,initial-scale=1"/>
        <meta name="description" content="mylove"/>
        <meta property="og:site_name" content="nguyenyennhi"/>
        <meta property="og:title" content="nguyenyennhi"/>
        <meta property="og:type" content="Heart/>
        <meta property="og:description" content="mylove"/>
        <meta property="og:image" content="https://nguyenyennhi.carrd.co/assets/images/card.jpg?v=16c8921a"/>
        <meta property="og:image:type" content="image/jpeg"/>
        <meta property="og:image:width" content="1280"/>
        <meta property="og:image:height" content="800"/>
        <meta property="og:url" content="https://nguyenyennhi.carrd.co"/>
        <meta property="twitter:card" content="summary_large_image"/>
        <link rel="canonical" href="https://nguyenyennhi.carrd.co"/>
        <link href="https://fonts.googleapis.com/css?display=swap&family=Aref+Ruqaa:400,400italic%7CPoppins:700,700italic%7CInter:400,400italic" rel="stylesheet" type="text/css"/>
        <style>
            html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video {
                margin: 0;
                padding: 0;
                border: 0;
                font-size: 100%;
                font: inherit;
                vertical-align: baseline;
            }

            article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section {
                display: block;
            }

            body {
                line-height: 1;
            }

            ol,ul {
                list-style: none;
            }

            blockquote,q {
                quotes: none;
            }

            blockquote:before,blockquote:after,q:before,q:after {
                content: '';
                content: none;
            }

            table {
                border-collapse: collapse;
                border-spacing: 0;
            }

            body {
                -webkit-text-size-adjust: none
            }

            mark {
                background-color: transparent;
                color: inherit
            }

            input::-moz-focus-inner {
                border: 0;
                padding: 0
            }

            input[type="text"],input[type="email"],select,textarea {
                -moz-appearance: none;
                -webkit-appearance: none;
                -ms-appearance: none;
                appearance: none
            }

            *, *:before, *:after {
                box-sizing: border-box;
            }

            body {
                line-height: 1.0;
                min-height: var(--viewport-height);
                min-width: 320px;
                overflow-x: hidden;
                word-wrap: break-word;
            }

            body:before {
                background-attachment: scroll;
                content: '';
                display: block;
                height: var(--background-height);
                left: 0;
                pointer-events: none;
                position: fixed;
                top: 0;
                transform: scale(1);
                width: 100vw;
                z-index: 0;
                background-image: url('data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%22640%22%20height%3D%22480%22%20viewBox%3D%220%200%20640%20480%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%20%3Cstyle%20type%3D%22text%2Fcss%22%3E%20use%5Bhref%3D%22%23heart%22%5D%20%7B%20fill%3A%20%23651959%3B%20%7D%20%3C%2Fstyle%3E%20%3Csymbol%20id%3D%22heart%22%20viewBox%3D%220%200%2040.0%2040.0%22%3E%20%3Cpath%20d%3D%22M%202%2C13%20A%207%2C17%20325%2C0%2C0%2020%2C37%20A%207%2C17%2035%2C0%2C0%2038%2C13%20A%209%2C9%200%2C0%2C0%2020%2C13%20A%209%2C9%200%2C0%2C0%202%2C13%22%20%2F%3E%20%3C%2Fsymbol%3E%20%3Cg%20transform%3D%22translate%2836.0%2C%20-16.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.4%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C512.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.4%200%22%20dur%3D%227000ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%2888.0%2C%20-36.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.9%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C552.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.9%200%22%20dur%3D%225000ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28160.0%2C%20-20.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.5%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C520.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.5%200%22%20dur%3D%225500ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28216.0%2C%20-12.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.3%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C504.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.3%200%22%20dur%3D%229500ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28264.0%2C%20-36.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.9%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C552.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.9%200%22%20dur%3D%2210000ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28336.0%2C%20-36.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.9%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C552.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.9%200%22%20dur%3D%227500ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28408.0%2C%20-12.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.3%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C504.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.3%200%22%20dur%3D%226000ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28456.0%2C%20-24.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.6%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C528.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.6%200%22%20dur%3D%229000ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28516.0%2C%20-32.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.8%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C544.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.8%200%22%20dur%3D%228000ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28584.0%2C%20-20.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.5%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C520.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.5%200%22%20dur%3D%226500ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%3C%2Fsvg%3E'), linear-gradient(42deg, #A12735 0%, #140413 100%);
                background-size: cover, auto;
                background-position: center, 0% 0%;
                background-repeat: no-repeat, repeat;
            }

            body:after {
                background-color: #272B36;
                content: '';
                display: block;
                height: 100%;
                left: 0;
                opacity: 0;
                position: fixed;
                top: 0;
                transform: scale(1);
                transition: opacity 1s ease-in-out 0.25s, visibility 1s 0.25s;
                visibility: hidden;
                width: 100%;
                z-index: 1;
            }

            body.is-loading:after {
                opacity: 1;
                visibility: visible;
            }

            :root {
                --background-height: 100vh;
                --site-language-alignment: left;
                --site-language-direction: ltr;
                --site-language-flex-alignment: flex-start;
                --site-language-indent-left: 1;
                --site-language-indent-right: 0;
                --viewport-height: 100vh;
            }

            html {
                font-size: 18pt;
            }

            u {
                text-decoration: underline;
            }

            strong {
                color: inherit;
                font-weight: bolder;
            }

            em {
                font-style: italic;
            }

            code {
                background-color: rgba(144,144,144,0.25);
                border-radius: 0.25em;
                font-family: 'Lucida Console', 'Courier New', monospace;
                font-size: 0.9em;
                font-weight: normal;
                letter-spacing: 0;
                margin: 0 0.25em;
                padding: 0.25em 0.5em;
                text-indent: 0;
            }

            mark {
                background-color: rgba(144,144,144,0.25);
            }

            s {
                text-decoration: line-through;
            }

            sub {
                font-size: smaller;
                vertical-align: sub;
            }

            sup {
                font-size: smaller;
                vertical-align: super;
            }

            a {
                color: inherit;
                text-decoration: underline;
                transition: color 0.25s ease;
            }

            #wrapper {
                -webkit-overflow-scrolling: touch;
                align-items: center;
                display: flex;
                flex-direction: column;
                justify-content: center;
                min-height: var(--viewport-height);
                overflow: hidden;
                position: relative;
                z-index: 2;
            }

            #main {
                --alignment: center;
                --flex-alignment: center;
                --indent-left: 1;
                --indent-right: 1;
                --border-radius-tl: 0;
                --border-radius-tr: 0;
                --border-radius-br: 0;
                --border-radius-bl: 0;
                align-items: center;
                display: flex;
                flex-grow: 0;
                flex-shrink: 0;
                justify-content: center;
                max-width: 100%;
                position: relative;
                text-align: var(--alignment);
                z-index: 1;
                transition: opacity 0.5s ease 0s,transform 0.5s ease 0s;
            }

            #main > .inner {
                --padding-horizontal: 4rem;
                --padding-vertical: 4rem;
                --spacing: 1.75rem;
                --width: 70rem;
                border-radius: var(--border-radius-tl) var(--border-radius-tr) var(--border-radius-br) var(--border-radius-bl);
                max-width: 100%;
                position: relative;
                width: var(--width);
                z-index: 1;
                padding: var(--padding-vertical) var(--padding-horizontal);
            }

            #main > .inner > * {
                margin-top: var(--spacing);
                margin-bottom: var(--spacing);
            }

            #main > .inner > :first-child {
                margin-top: 0 !important;
            }

            #main > .inner > :last-child {
                margin-bottom: 0 !important;
            }

            #main > .inner > .full {
                margin-left: calc(var(--padding-horizontal) * -1);
                max-width: calc(100% + calc(var(--padding-horizontal) * 2) + 0.4725px);
                width: calc(100% + calc(var(--padding-horizontal) * 2) + 0.4725px);
            }

            #main > .inner > .full:first-child {
                border-top-left-radius: inherit;
                border-top-right-radius: inherit;
                margin-top: calc(var(--padding-vertical) * -1) !important;
            }

            #main > .inner > .full:last-child {
                border-bottom-left-radius: inherit;
                border-bottom-right-radius: inherit;
                margin-bottom: calc(var(--padding-vertical) * -1) !important;
            }

            #main > .inner > .full.screen {
                border-radius: 0 !important;
                max-width: 100vw;
                position: relative;
                width: 100vw;
                left: 50%;
                margin-left: -50vw;
                right: auto;
            }

            body.is-loading #main {
                opacity: 0;
                transform: translateY(0.375rem);
            }

            body.is-instant #main, body.is-instant #main > .inner > *,body.is-instant #main > .inner > section > * {
                transition: none !important;
            }

            body.is-instant:after {
                display: none !important;
                transition: none !important;
            }

            .container {
                position: relative;
            }

            .container > .wrapper {
                vertical-align: top;
                position: relative;
                max-width: 100%;
                border-radius: inherit;
            }

            .container > .wrapper > .inner {
                vertical-align: top;
                position: relative;
                max-width: 100%;
                border-radius: inherit;
                text-align: var(--alignment);
            }

            #main .container.full:first-child > .wrapper {
                border-top-left-radius: inherit;
                border-top-right-radius: inherit;
            }

            #main .container.full:last-child > .wrapper {
                border-bottom-left-radius: inherit;
                border-bottom-right-radius: inherit;
            }

            #main .container.full:first-child > .wrapper > .inner {
                border-top-left-radius: inherit;
                border-top-right-radius: inherit;
            }

            #main .container.full:last-child > .wrapper > .inner {
                border-bottom-left-radius: inherit;
                border-bottom-right-radius: inherit;
            }

            .container.style3:not(:first-child) {
                margin-top: 0rem !important;
            }

            .container.style3:not(:last-child) {
                margin-bottom: 0rem !important;
            }

            .container.style3 > .wrapper {
                display: block;
                margin: 0 auto 0 auto;
                width: 33rem;
                background-color: #2F3340;
                background-image: url('data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%22640%22%20height%3D%22480%22%20viewBox%3D%220%200%20640%20480%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%20%3Cstyle%20type%3D%22text%2Fcss%22%3E%20use%5Bhref%3D%22%23heart%22%5D%20%7B%20fill%3A%20rgba(255,255,255,0.078)%3B%20%7D%20%3C%2Fstyle%3E%20%3Csymbol%20id%3D%22heart%22%20viewBox%3D%220%200%2040.0%2040.0%22%3E%20%3Cpath%20d%3D%22M%202%2C13%20A%207%2C17%20325%2C0%2C0%2020%2C37%20A%207%2C17%2035%2C0%2C0%2038%2C13%20A%209%2C9%200%2C0%2C0%2020%2C13%20A%209%2C9%200%2C0%2C0%202%2C13%22%20%2F%3E%20%3C%2Fsymbol%3E%20%3Cg%20transform%3D%22translate%2836.0%2C%20-16.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.4%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C512.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.4%200%22%20dur%3D%227000ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%2888.0%2C%20-36.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.9%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C552.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.9%200%22%20dur%3D%225000ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28160.0%2C%20-20.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.5%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C520.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.5%200%22%20dur%3D%225500ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28216.0%2C%20-12.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.3%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C504.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.3%200%22%20dur%3D%229500ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28264.0%2C%20-36.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.9%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C552.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.9%200%22%20dur%3D%2210000ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28336.0%2C%20-36.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.9%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C552.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.9%200%22%20dur%3D%227500ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28408.0%2C%20-12.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.3%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C504.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.3%200%22%20dur%3D%226000ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28456.0%2C%20-24.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.6%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C528.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.6%200%22%20dur%3D%229000ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28516.0%2C%20-32.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.8%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C544.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.8%200%22%20dur%3D%228000ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28584.0%2C%20-20.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.5%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C520.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.5%200%22%20dur%3D%226500ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%3C%2Fsvg%3E');
                background-size: cover;
                background-position: center;
                background-repeat: no-repeat;
                border-color: #A83939;
                border-style: solid;
                box-shadow: 0rem -0rem 0rem 0rem #D4BEBE;
                border-radius: 1rem;
            }

            .container.style3 > .wrapper > .inner {
                --gutters: 3rem;
                --padding-horizontal: 3rem;
                --padding-vertical: 4rem;
                padding: var(--padding-vertical) var(--padding-horizontal);
            }

            .container.style3.default > .wrapper > .inner > * {
                margin-bottom: var(--spacing);
                margin-top: var(--spacing);
            }

            .container.style3.default > .wrapper > .inner > *:first-child {
                margin-top: 0 !important;
            }

            .container.style3.default > .wrapper > .inner > *:last-child {
                margin-bottom: 0 !important;
            }

            .container.style3.columns > .wrapper > .inner {
                flex-wrap: wrap;
                display: flex;
                align-items: center;
            }

            .container.style3.columns > .wrapper > .inner > * {
                flex-grow: 0;
                flex-shrink: 0;
                max-width: 100%;
                text-align: var(--alignment);
                padding: 0 0 0 var(--gutters);
            }

            .container.style3.columns > .wrapper > .inner > * > * {
                margin-bottom: var(--spacing);
                margin-top: var(--spacing);
            }

            .container.style3.columns > .wrapper > .inner > * > *:first-child {
                margin-top: 0 !important;
            }

            .container.style3.columns > .wrapper > .inner > * > *:last-child {
                margin-bottom: 0 !important;
            }

            .container.style3.columns > .wrapper > .inner > *:first-child {
                margin-left: calc(var(--gutters) * -1);
            }

            .container.style3.columns > .wrapper > .inner > *:before {
                border-left: solid 1px #A83939;
                content: '';
                display: block;
                margin-left: calc((var(--gutters) * -0.5) - 0.5px);
                position: absolute;
                width: 0;
                height: calc(100% - (var(--padding-vertical) * 2));
                top: var(--padding-vertical);
            }

            .container.style3.columns > .wrapper > .inner > *:first-child:before {
                display: none;
            }

            .container.style3.default > .wrapper > .inner > .full {
                margin-left: calc(var(--padding-horizontal) * -1);
                max-width: none !important;
                width: calc(100% + (var(--padding-horizontal) * 2) + 0.4725px);
            }

            .container.style3.default > .wrapper > .inner > .full:first-child {
                margin-top: calc(var(--padding-vertical) * -1) !important;
                border-top-left-radius: inherit;
                border-top-right-radius: inherit;
            }

            .container.style3.default > .wrapper > .inner > .full:last-child {
                margin-bottom: calc(var(--padding-vertical) * -1) !important;
                border-bottom-left-radius: inherit;
                border-bottom-right-radius: inherit;
            }

            .container.style3.columns > .wrapper > .inner > div > .full {
                margin-left: calc((var(--gutters) * -0.5) + 0.5px);
                max-width: none !important;
                width: calc(100% + var(--gutters) + 0.4725px - 1px);
            }

            .container.style3.columns > .wrapper > .inner > div:first-child > .full {
                margin-left: calc(var(--padding-horizontal) * -1);
                width: calc(100% + var(--padding-horizontal) + calc(var(--gutters) * 0.5) + 0.4725px - 0.5px);
            }

            .container.style3.columns > .wrapper > .inner > div:last-child > .full {
                width: calc(100% + var(--padding-horizontal) + calc(var(--gutters) * 0.5) + 0.4725px - 0.5px);
            }

            .container.style3.columns > .wrapper > .inner > div > .full:first-child {
                margin-top: calc(var(--padding-vertical) * -1) !important;
            }

            .container.style3.columns > .wrapper > .inner > div > .full:last-child {
                margin-bottom: calc(var(--padding-vertical) * -1) !important;
            }

            .container.style3.columns > .wrapper > .inner > .full {
                align-self: stretch;
            }

            .container.style3.columns > .wrapper > .inner > .full:first-child {
                border-bottom-left-radius: inherit;
                border-top-left-radius: inherit;
            }

            .container.style3.columns > .wrapper > .inner > .full:last-child {
                border-bottom-right-radius: inherit;
                border-top-right-radius: inherit;
            }

            .container.style3.columns > .wrapper > .inner > .full > .full:first-child:last-child {
                border-radius: inherit;
                height: calc(100% + (var(--padding-vertical) * 2));
            }

            .container.style3.columns > .wrapper > .inner > .full > .full:first-child:last-child > * {
                border-radius: inherit;
                height: 100%;
                position: absolute;
                width: 100%;
            }

            .container.style2 {
                --alignment: center;
                --flex-alignment: center;
                --indent-left: 1;
                --indent-right: 1;
                display: flex;
                width: 100%;
                align-items: center;
                justify-content: center;
                background-color: #2F3340;
                background-image: url('data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%22640%22%20height%3D%22480%22%20viewBox%3D%220%200%20640%20480%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%20%3Cstyle%20type%3D%22text%2Fcss%22%3E%20use%5Bhref%3D%22%23heart%22%5D%20%7B%20fill%3A%20rgba(255,255,255,0.031)%3B%20%7D%20%3C%2Fstyle%3E%20%3Csymbol%20id%3D%22heart%22%20viewBox%3D%220%200%2040.0%2040.0%22%3E%20%3Cpath%20d%3D%22M%202%2C13%20A%207%2C17%20325%2C0%2C0%2020%2C37%20A%207%2C17%2035%2C0%2C0%2038%2C13%20A%209%2C9%200%2C0%2C0%2020%2C13%20A%209%2C9%200%2C0%2C0%202%2C13%22%20%2F%3E%20%3C%2Fsymbol%3E%20%3Cg%20transform%3D%22translate%2836.0%2C%20-16.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.4%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C512.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.4%200%22%20dur%3D%227000ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%2888.0%2C%20-36.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.9%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C552.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.9%200%22%20dur%3D%225000ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28160.0%2C%20-20.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.5%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C520.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.5%200%22%20dur%3D%225500ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28216.0%2C%20-12.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.3%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C504.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.3%200%22%20dur%3D%229500ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28264.0%2C%20-36.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.9%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C552.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.9%200%22%20dur%3D%2210000ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28336.0%2C%20-36.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.9%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C552.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.9%200%22%20dur%3D%227500ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28408.0%2C%20-12.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.3%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C504.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.3%200%22%20dur%3D%226000ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28456.0%2C%20-24.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.6%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C528.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.6%200%22%20dur%3D%229000ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28516.0%2C%20-32.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.8%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C544.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.8%200%22%20dur%3D%228000ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%20%3Cg%20transform%3D%22translate%28584.0%2C%20-20.0%29%22%3E%20%3Cuse%20href%3D%22%23heart%22%20width%3D%2240.0%22%20height%3D%2240.0%22%20transform%3D%22scale%280.5%29%22%20%2F%3E%20%3CanimateMotion%20path%3D%22M%200%2C0%20L%200%2C520.0%22%20keyTimes%3D%220%3B1%22%20keySplines%3D%220%200%200.5%200%22%20dur%3D%226500ms%22%20repeatCount%3D%22indefinite%22%20calcMode%3D%22spline%22%20begin%3D%22-7s%22%20%2F%3E%20%3C%2Fg%3E%3C%2Fsvg%3E');
                background-size: cover;
                background-position: center;
                background-repeat: no-repeat;
                border-radius: 1rem;
            }

            .container.style2:not(:first-child) {
                margin-top: 0rem !important;
            }

            .container.style2:not(:last-child) {
                margin-bottom: 0rem !important;
            }

            .container.style2 > .wrapper > .inner {
                --gutters: 3rem;
                --padding-horizontal: 3rem;
                --padding-vertical: 3rem;
                padding: var(--padding-vertical) var(--padding-horizontal);
            }

            .container.style2 > .wrapper {
                max-width: 100%;
                width: 100%;
            }

            .container.style2.default > .wrapper > .inner > * {
                margin-bottom: var(--spacing);
                margin-top: var(--spacing);
            }

            .container.style2.default > .wrapper > .inner > *:first-child {
                margin-top: 0 !important;
            }

            .container.style2.default > .wrapper > .inner > *:last-child {
                margin-bottom: 0 !important;
            }

            .container.style2.columns > .wrapper > .inner {
                flex-wrap: wrap;
                display: flex;
                align-items: center;
            }

            .container.style2.columns > .wrapper > .inner > * {
                flex-grow: 0;
                flex-shrink: 0;
                max-width: 100%;
                text-align: var(--alignment);
                padding: 0 0 0 var(--gutters);
            }

            .container.style2.columns > .wrapper > .inner > * > * {
                margin-bottom: var(--spacing);
                margin-top: var(--spacing);
            }

            .container.style2.columns > .wrapper > .inner > * > *:first-child {
                margin-top: 0 !important;
            }

            .container.style2.columns > .wrapper > .inner > * > *:last-child {
                margin-bottom: 0 !important;
            }

            .container.style2.columns > .wrapper > .inner > *:first-child {
                margin-left: calc(var(--gutters) * -1);
            }

            .container.style2.default > .wrapper > .inner > .full {
                margin-left: calc(var(--padding-horizontal) * -1);
                max-width: none !important;
                width: calc(100% + (var(--padding-horizontal) * 2) + 0.4725px);
            }

            .container.style2.default > .wrapper > .inner > .full:first-child {
                margin-top: calc(var(--padding-vertical) * -1) !important;
                border-top-left-radius: inherit;
                border-top-right-radius: inherit;
            }

            .container.style2.default > .wrapper > .inner > .full:last-child {
                margin-bottom: calc(var(--padding-vertical) * -1) !important;
                border-bottom-left-radius: inherit;
                border-bottom-right-radius: inherit;
            }

            .container.style2.columns > .wrapper > .inner > div > .full {
                margin-left: calc(var(--gutters) * -0.5);
                max-width: none !important;
                width: calc(100% + var(--gutters) + 0.4725px);
            }

            .container.style2.columns > .wrapper > .inner > div:first-child > .full {
                margin-left: calc(var(--padding-horizontal) * -1);
                width: calc(100% + var(--padding-horizontal) + calc(var(--gutters) * 0.5) + 0.4725px);
            }

            .container.style2.columns > .wrapper > .inner > div:last-child > .full {
                width: calc(100% + var(--padding-horizontal) + calc(var(--gutters) * 0.5) + 0.4725px);
            }

            .container.style2.columns > .wrapper > .inner > div > .full:first-child {
                margin-top: calc(var(--padding-vertical) * -1) !important;
            }

            .container.style2.columns > .wrapper > .inner > div > .full:last-child {
                margin-bottom: calc(var(--padding-vertical) * -1) !important;
            }

            .container.style2.columns > .wrapper > .inner > .full {
                align-self: stretch;
            }

            .container.style2.columns > .wrapper > .inner > .full:first-child {
                border-bottom-left-radius: inherit;
                border-top-left-radius: inherit;
            }

            .container.style2.columns > .wrapper > .inner > .full:last-child {
                border-bottom-right-radius: inherit;
                border-top-right-radius: inherit;
            }

            .container.style2.columns > .wrapper > .inner > .full > .full:first-child:last-child {
                border-radius: inherit;
                height: calc(100% + (var(--padding-vertical) * 2));
            }

            .container.style2.columns > .wrapper > .inner > .full > .full:first-child:last-child > * {
                border-radius: inherit;
                height: 100%;
                position: absolute;
                width: 100%;
            }

            #container07 > .wrapper > .inner > :nth-child(1) {
                width: calc(50% + (var(--gutters) / 2));
            }

            #container07 > .wrapper > .inner > :nth-child(2) {
                width: calc(50% + (var(--gutters) / 2));
            }

            #container06 > .wrapper > .inner > :nth-child(1) {
                width: calc(50% + (var(--gutters) / 2));
            }

            #container06 > .wrapper > .inner > :nth-child(2) {
                width: calc(50% + (var(--gutters) / 2));
            }

            #container03 > .wrapper > .inner > :nth-child(1) {
                width: calc(50% + (var(--gutters) / 2));
            }

            #container03 > .wrapper > .inner > :nth-child(2) {
                width: calc(50% + (var(--gutters) / 2));
            }

            #container04 > .wrapper > .inner > :nth-child(1) {
                width: calc(50% + (var(--gutters) / 2));
            }

            #container04 > .wrapper > .inner > :nth-child(2) {
                width: calc(50% + (var(--gutters) / 2));
            }

            hr {
                border: 0;
                padding: 0;
                position: relative;
                width: 100%;
            }

            hr:before {
                content: '';
                display: inline-block;
                max-width: 100%;
                vertical-align: middle;
            }

            hr.style1:not(:first-child) {
                margin-top: 1.25rem !important;
            }

            hr.style1:not(:last-child) {
                margin-bottom: 1.25rem !important;
            }

            hr.style1:before {
                height: 10rem;
                border-left: dotted 1px #011214;
                width: 1px;
            }

            h1, h2, h3, p {
                direction: var(--site-language-direction);
                position: relative;
            }

            h1 span.p, h2 span.p, h3 span.p, p span.p {
                display: block;
                position: relative;
            }

            h1 span[style], h2 span[style], h3 span[style], p span[style], h1 strong, h2 strong, h3 strong, p strong, h1 a, h2 a, h3 a, p a, h1 code, h2 code, h3 code, p code, h1 mark, h2 mark, h3 mark, p mark {
                -webkit-text-fill-color: currentcolor;
            }

            h1.style4, h2.style4, h3.style4, p.style4 {
                color: #E0DADF;
                font-family: 'Aref Ruqaa', serif;
                letter-spacing: -0.125rem;
                width: 100%;
                font-size: 1.875em;
                line-height: 1.25;
                font-weight: 400;
            }

            h1.style4 mark, h2.style4 mark, h3.style4 mark, p.style4 mark {
                color: #5F3FBA;
                background-color: transparent;
            }

            h1.style4 a, h2.style4 a, h3.style4 a, p.style4 a {
                text-decoration: none;
            }

            h1.style4 a:hover, h2.style4 a:hover, h3.style4 a:hover, p.style4 a:hover {
                text-decoration: underline;
            }

            h1.style4 span.p:nth-child(n + 2), h2.style4 span.p:nth-child(n + 2), h3.style4 span.p:nth-child(n + 2), p.style4 span.p:nth-child(n + 2) {
                margin-top: 1rem;
            }

            h1.style2, h2.style2, h3.style2, p.style2 {
                color: #FF7A7A;
                font-family: 'Poppins', sans-serif;
                font-size: 4.5em;
                line-height: 1.25;
                font-weight: 700;
                background-image: linear-gradient(45deg, #695EE6 0%, #FF7A7A 85%);
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
            }

            h1.style2 mark, h2.style2 mark, h3.style2 mark, p.style2 mark {
                color: #A1A1A1;
                background-color: transparent;
            }

            h1.style2 a, h2.style2 a, h3.style2 a, p.style2 a {
                text-decoration: none;
            }

            h1.style2 a:hover, h2.style2 a:hover, h3.style2 a:hover, p.style2 a:hover {
                text-decoration: underline;
            }

            h1.style2 span.p:nth-child(n + 2), h2.style2 span.p:nth-child(n + 2), h3.style2 span.p:nth-child(n + 2), p.style2 span.p:nth-child(n + 2) {
                margin-top: 1rem;
                -webkit-text-fill-color: currentcolor;
            }

            h1.style2 span.p, h2.style2 span.p, h3.style2 span.p, p.style2 span.p {
                background-image: linear-gradient(45deg, #695EE6 0%, #FF7A7A 85%);
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent !important;
            }

            .icons {
                display: flex;
                flex-wrap: wrap;
                justify-content: var(--flex-alignment);
                letter-spacing: 0;
                padding: 0;
            }

            .icons li {
                position: relative;
                z-index: 1;
            }

            .icons li a {
                align-items: center;
                display: flex;
                justify-content: center;
            }

            .icons li a svg {
                display: block;
                position: relative;
            }

            .icons li a + svg {
                display: block;
                height: 100%;
                left: 0;
                pointer-events: none;
                position: absolute;
                top: 0;
                width: 100%;
                z-index: -1;
            }

            .icons li a .label {
                display: none;
            }

            .icons.style1 {
                font-size: 1.875em;
                gap: 0.75rem;
            }

            .icons.style1 li a {
                border-radius: 100%;
                height: 2em;
                width: 2em;
                transition: transform 0.25s ease, color 0.25s ease, background-color 0.25s ease, border-color 0.25s ease;
            }

            .icons.style1 li a svg {
                height: 60%;
                width: 60%;
                transition: fill 0.25s ease;
            }

            .icons.style1 a {
                background-color: #3E4352;
            }

            .icons.style1 a svg {
                fill: #C685D6;
            }

            .icons.style1 li a + svg {
                transition: transform 0.25s ease, fill 0.25s ease, stroke 0.25s ease;
            }

            .icons.style1 li a:hover {
                transform: scale(1.1125);
            }

            .icons.style1 li a:hover + svg {
                transform: scale(1.1125);
            }

            .image {
                display: block;
                line-height: 0;
                max-width: 100%;
                position: relative;
            }

            .image .frame {
                -webkit-backface-visibility: hidden;
                -webkit-transform: translate3d(0, 0, 0);
                display: inline-block;
                max-width: 100%;
                overflow: hidden;
                vertical-align: top;
                width: 100%;
            }

            .image .frame img {
                border-radius: 0 !important;
                max-width: 100%;
                vertical-align: top;
                width: inherit;
            }

            .image.full .frame {
                display: block;
            }

            .image.full:first-child .frame {
                border-top-left-radius: inherit;
                border-top-right-radius: inherit;
            }

            .image.full:last-child .frame {
                border-bottom-left-radius: inherit;
                border-bottom-right-radius: inherit;
            }

            .image.style3:not(:first-child) {
                margin-top: 3rem !important;
            }

            .image.style3:not(:last-child) {
                margin-bottom: 3rem !important;
            }

            .image.style3 .frame {
                width: 100vw;
                height: 25rem;
                border-radius: 100%;
                border-color: #C685D6;
                border-style: solid;
                border-width: 2px;
                box-shadow: 0rem 0rem 0rem 0.75rem #3E4352;
                transition: none;
            }

            .image.style3 img {
                height: 100% !important;
                object-fit: cover;
                object-position: center;
                width: 100% !important;
            }

            .image.style3 .frame img {
                transition: none;
            }

            .image.style1 .frame {
                width: 9rem;
                border-radius: 100%;
                border-color: #C685D6;
                border-style: solid;
                border-width: 1px;
                box-shadow: -0rem -0rem 0rem 1.5rem #3E4352;
                transition: none;
            }

            .image.style1 .frame img {
                transition: none;
            }

            .timer {
                cursor: default;
                line-height: inline-flex;
                flex-direction: row;
                /* list-style: none; */
                max-width: 100%;
                ;max-width: 100%;;
            }

            .timer ul {
                display: inline-flex;
                flex-direction: row;
                list-style: none;
                max-width: 100%;
            }

            .timer ul li {
                position: relative;
                z-index: 1;
            }

            .timer ul li.delimiter {
                flex: 0 1 auto;
            }

            .timer ul li.delimiter .symbol {
                display: block;
                left: 0;
                position: absolute;
                text-align: center;
                top: 0;
                width: 100%;
            }

            .timer ul li.number {
                flex: 1;
                min-width: 2rem;
            }

            .timer ul li.number .item {
                position: relative;
            }

            .timer ul li.number .item .digit {
                display: block;
                position: relative;
                white-space: nowrap;
            }

            .timer ul li.number .item .digit .component {
                display: inline-block;
                width: 50%;
            }

            .timer ul li.number .item .digit.count2 .component {
                width: 50%;
            }

            .timer ul li.number .item .digit.count3 .component {
                width: 40%;
            }

            .timer ul li.number .item .digit.count4 .component {
                width: 25%;
            }

            .timer ul li.number .item .digit.count5 .component {
                width: 20%;
            }

            .timer ul li.number .item .label {
                display: block;
                white-space: nowrap;
            }

            .timer ul li.number .item .label > * {
                display: inline-block;
            }

            .timer ul li.number .item .label .full {
                width: 5em;
            }

            .timer ul li.number .item .label .abbreviated {
                width: 3em;
            }

            .timer ul li.number .item .label .initialed {
                width: 1em;
            }

            #timer01 ul {
                width: 30rem;
            }

            #timer01 ul li.delimiter {
                width: 3.5rem;
                min-width: 1rem;
            }

            #timer01 ul li.delimiter .symbol {
                color: #C685D6;
            }

            #timer01 ul li.number .item .digit {
                font-family: 'Poppins', sans-serif;
                font-weight: 700;
                color: #FF7A7A;
                line-height: 1em;
                text-align: inherit;
            }

            #timer01 ul li.number .item .label > * {
                margin-top: calc(0.5rem + 0.25em);
            }

            #timer01 ul li.number .item .label {
                font-family: 'Inter', sans-serif;
                font-size: 2rem;
                font-weight: 400;
                color: rgba(255,255,255,0.588);
            }

            .icc-credits {
                display: block;
                opacity: 1 !important;
                position: relative;
                transition-delay: 0s !important;
            }

            .icc-credits span {
                border-radius: 24px;
                cursor: pointer;
                display: inline-block;
                font-family: Arial, sans-serif;
                font-size: 12px;
                letter-spacing: 0;
                line-height: 1;
                position: relative;
                text-decoration: none;
                width: auto;
            }

            .icc-credits span a {
                display: inline-block;
                padding: 0.5em 0.375em;
                position: relative;
                text-decoration: none;
                transition: color 0.25s ease, transform 0.25s ease;
                z-index: 1;
            }

            .icc-credits span a:before {
                content: '( ';
                opacity: 1;
                transition: opacity 0.25s ease;
            }

            .icc-credits span a:after {
                content: ' )';
                opacity: 1;
                transition: opacity 0.25s ease;
            }

            .icc-credits span::after {
                background-image: linear-gradient(30deg, #A464A1 15%, #3B5DAD 85%);
                border-radius: inherit;
                box-shadow: 0 0.25em 1.25em 0 rgba(0,0,0,0.25);
                content: '';
                display: block;
                height: calc(100% + 2px);
                left: -1px;
                opacity: 0;
                pointer-events: none;
                position: absolute;
                top: -1px;
                transition: opacity 0.25s ease, box-shadow 0.25s ease, transform 0.25s ease;
                width: calc(100% + 2px);
            }

            .icc-credits span:hover {
                text-transform: none !important;
            }

            .icc-credits span:hover a {
                color: #ffffff !important;
                transform: scale(1.1) translateY(-0.05rem);
            }

            .icc-credits span:hover a:before {
                opacity: 0;
            }

            .icc-credits span:hover a:after {
                opacity: 0;
            }

            .icc-credits span:hover::after {
                opacity: 1;
                transform: scale(1.1) translateY(-0.05rem);
            }

            #credits span {
                color: rgba(244,210,214,0.498);
                margin-top: 1.5rem !important;
            }

            @media (max-width: 1920px) {
            }

            @media (max-width: 1680px) {
                html {
                    font-size: 13pt;
                }
            }

            @media (max-width: 1280px) {
                html {
                    font-size: 13pt;
                }
            }

            @media (max-width: 1024px) {
            }

            @media (max-width: 980px) {
                html {
                    font-size: 11pt;
                }
            }

            @media (max-width: 736px) {
                html {
                    font-size: 11pt;
                }

                #main > .inner {
                    --padding-horizontal: 1.5rem;
                    --padding-vertical: 1.5rem;
                    --spacing: 1.75rem;
                }

                .container.style3:not(:first-child) {
                    margin-top: 0rem !important;
                }

                .container.style3:not(:last-child) {
                    margin-bottom: 0rem !important;
                }

                .container.style3 > .wrapper > .inner {
                    --gutters: 3rem;
                    --padding-horizontal: 2rem;
                    --padding-vertical: 3rem;
                }

                .container.style3.columns > .wrapper > .inner {
                    flex-direction: column !important;
                    flex-wrap: nowrap !important;
                }

                .container.style3.columns > .wrapper > .inner > span {
                    height: 0;
                    margin-top: calc(var(--gutters) * -1);
                    pointer-events: none;
                    visibility: hidden;
                }

                .container.style3.columns > .wrapper > .inner > span:first-child + div:before {
                    display: none !important;
                }

                .container.style3.columns > .wrapper > .inner > *:first-child {
                    margin-left: 0 !important;
                    padding-top: 0 !important;
                }

                .container.style3.columns > .wrapper > .inner > * {
                    padding: calc(var(--gutters) * 0.5) 0 !important;
                }

                .container.style3.columns > .wrapper > .inner > *:before {
                    border-top: solid 1px #A83939 !important;
                    height: 0 !important;
                    margin-left: 0 !important;
                    top: auto !important;
                    margin-top: calc((var(--gutters) * -0.5) - 0.5px) !important;
                    left: var(--padding-horizontal) !important;
                    width: calc(100% - (var(--padding-horizontal) * 2)) !important;
                }

                .container.style3.columns > .wrapper > .inner > *:last-child {
                    padding-bottom: 0 !important;
                }

                .container.style3.columns > .wrapper > .inner > *:first-child:before {
                    display: none !important;
                }

                .container.style3.columns > .wrapper > .inner > *:last-child:before {
                    display: block !important;
                }

                .container.style3.columns > .wrapper > .inner > div > .full {
                    margin-left: calc(var(--padding-horizontal) * -1);
                    width: calc(100% + (var(--padding-horizontal) * 2) + 0.4725px);
                }

                .container.style3.columns > .wrapper > .inner > div:first-of-type > .full {
                    margin-left: calc(var(--padding-horizontal) * -1);
                    width: calc(100% + (var(--padding-horizontal) * 2) + 0.4725px);
                }

                .container.style3.columns > .wrapper > .inner > div:last-of-type > .full {
                    margin-left: calc(var(--padding-horizontal) * -1);
                    width: calc(100% + (var(--padding-horizontal) * 2) + 0.4725px);
                }

                .container.style3.columns > .wrapper > .inner > div > .full:first-child {
                    margin-top: calc((var(--gutters) * -0.5) + 0.5px) !important;
                }

                .container.style3.columns > .wrapper > .inner > div > .full:last-child {
                    margin-bottom: calc((var(--gutters) * -0.5) + 0.5px) !important;
                }

                .container.style3.columns > .wrapper > .inner > div:first-of-type > .full:first-child {
                    margin-top: calc(var(--padding-vertical) * -1) !important;
                }

                .container.style3.columns > .wrapper > .inner > div:last-of-type > .full:last-child {
                    margin-bottom: calc(var(--padding-vertical) * -1) !important;
                }

                .container.style3.columns > .wrapper > .inner > div:first-of-type, .container.style3.columns > .wrapper > .inner > div:first-of-type > .full:first-child {
                    border-top-left-radius: inherit;
                    border-top-right-radius: inherit;
                }

                .container.style3.columns > .wrapper > .inner > div:last-of-type, .container.style3.columns > .wrapper > .inner > div:last-of-type > .full:last-child {
                    border-bottom-left-radius: inherit;
                    border-bottom-right-radius: inherit;
                }

                .container.style3.columns > .wrapper > .inner > div:first-of-type, .container.style3.columns > .wrapper > .inner > div:first-of-type > .full:last-child {
                    border-bottom-left-radius: 0 !important;
                }

                .container.style3.columns > .wrapper > .inner > div:last-of-type, .container.style3.columns > .wrapper > .inner > div:last-of-type > .full:first-child {
                    border-top-right-radius: 0 !important;
                }

                .container.style3.columns > .wrapper > .inner > .full > .full:first-child:last-child {
                    height: auto;
                }

                .container.style3.columns > .wrapper > .inner > .full > .full:first-child:last-child > * {
                    height: auto;
                    position: relative;
                    width: auto;
                }

                .container.style2:not(:first-child) {
                    margin-top: 0rem !important;
                }

                .container.style2:not(:last-child) {
                    margin-bottom: 0rem !important;
                }

                .container.style2 > .wrapper > .inner {
                    --gutters: 3rem;
                    --padding-horizontal: 2rem;
                    --padding-vertical: 3rem;
                }

                .container.style2.columns > .wrapper > .inner {
                    flex-direction: column !important;
                    flex-wrap: nowrap !important;
                }

                .container.style2.columns > .wrapper > .inner > span {
                    height: 0;
                    margin-top: calc(var(--gutters) * -1);
                    pointer-events: none;
                    visibility: hidden;
                }

                .container.style2.columns > .wrapper > .inner > *:first-child {
                    margin-left: 0 !important;
                    padding-top: 0 !important;
                }

                .container.style2.columns > .wrapper > .inner > * {
                    padding: calc(var(--gutters) * 0.5) 0 !important;
                }

                .container.style2.columns > .wrapper > .inner > *:last-child {
                    padding-bottom: 0 !important;
                }

                .container.style2.columns > .wrapper > .inner > div > .full {
                    margin-left: calc(var(--padding-horizontal) * -1);
                    width: calc(100% + (var(--padding-horizontal) * 2) + 0.4725px);
                }

                .container.style2.columns > .wrapper > .inner > div:first-of-type > .full {
                    margin-left: calc(var(--padding-horizontal) * -1);
                    width: calc(100% + (var(--padding-horizontal) * 2) + 0.4725px);
                }

                .container.style2.columns > .wrapper > .inner > div:last-of-type > .full {
                    margin-left: calc(var(--padding-horizontal) * -1);
                    width: calc(100% + (var(--padding-horizontal) * 2) + 0.4725px);
                }

                .container.style2.columns > .wrapper > .inner > div > .full:first-child {
                    margin-top: calc(var(--gutters) * -0.5) !important;
                }

                .container.style2.columns > .wrapper > .inner > div > .full:last-child {
                    margin-bottom: calc(var(--gutters) * -0.5) !important;
                }

                .container.style2.columns > .wrapper > .inner > div:first-of-type > .full:first-child {
                    margin-top: calc(var(--padding-vertical) * -1) !important;
                }

                .container.style2.columns > .wrapper > .inner > div:last-of-type > .full:last-child {
                    margin-bottom: calc(var(--padding-vertical) * -1) !important;
                }

                .container.style2.columns > .wrapper > .inner > div:first-of-type, .container.style2.columns > .wrapper > .inner > div:first-of-type > .full:first-child {
                    border-top-left-radius: inherit;
                    border-top-right-radius: inherit;
                }

                .container.style2.columns > .wrapper > .inner > div:last-of-type, .container.style2.columns > .wrapper > .inner > div:last-of-type > .full:last-child {
                    border-bottom-left-radius: inherit;
                    border-bottom-right-radius: inherit;
                }

                .container.style2.columns > .wrapper > .inner > div:first-of-type, .container.style2.columns > .wrapper > .inner > div:first-of-type > .full:last-child {
                    border-bottom-left-radius: 0 !important;
                }

                .container.style2.columns > .wrapper > .inner > div:last-of-type, .container.style2.columns > .wrapper > .inner > div:last-of-type > .full:first-child {
                    border-top-right-radius: 0 !important;
                }

                .container.style2.columns > .wrapper > .inner > .full > .full:first-child:last-child {
                    height: auto;
                }

                .container.style2.columns > .wrapper > .inner > .full > .full:first-child:last-child > * {
                    height: auto;
                    position: relative;
                    width: auto;
                }

                #container07 > .wrapper > .inner > :nth-child(1) {
                    min-height: 100% !important;
                    width: 100% !important;
                }

                #container07 > .wrapper > .inner > :nth-child(2) {
                    min-height: 100% !important;
                    width: 100% !important;
                }

                #container06 > .wrapper > .inner > :nth-child(1) {
                    min-height: 100% !important;
                    width: 100% !important;
                }

                #container06 > .wrapper > .inner > :nth-child(2) {
                    min-height: 100% !important;
                    width: 100% !important;
                }

                #container03 > .wrapper > .inner > :nth-child(1) {
                    min-height: 100% !important;
                    width: 100% !important;
                }

                #container03 > .wrapper > .inner > :nth-child(2) {
                    min-height: 100% !important;
                    width: 100% !important;
                }

                #container04 > .wrapper > .inner > :nth-child(1) {
                    min-height: 100% !important;
                    width: 100% !important;
                }

                #container04 > .wrapper > .inner > :nth-child(2) {
                    min-height: 100% !important;
                    width: 100% !important;
                }

                hr.style1:not(:first-child) {
                    margin-top: 1.25rem !important;
                }

                hr.style1:not(:last-child) {
                    margin-bottom: 1.25rem !important;
                }

                hr.style1:before {
                    height: 3rem;
                }

                h1.style4, h2.style4, h3.style4, p.style4 {
                    letter-spacing: -0.109375rem;
                    width: 100%;
                    font-size: 1.875em;
                    line-height: 1.25;
                }

                h1.style2, h2.style2, h3.style2, p.style2 {
                    letter-spacing: 0rem;
                    width: 100%;
                    font-size: 2.75em;
                    line-height: 1.25;
                }

                .icons.style1 {
                    font-size: 1.875em;
                    gap: 0.75rem;
                }

                .image.style3:not(:first-child) {
                    margin-top: 3rem !important;
                }

                .image.style3:not(:last-child) {
                    margin-bottom: 3rem !important;
                }

                .image.style3 .frame {
                    width: 100vw;
                    height: 18.75rem !important;
                }

                .image.style3 img {
                    height: 100% !important;
                    object-fit: cover;
                    object-position: center;
                    width: 100% !important;
                }

                .image.style1 .frame {
                    width: 7.75rem;
                }
            }

            @media (max-width: 480px) {
                #main > .inner {
                    --spacing: 1.53125rem;
                }

                .image.style3 .frame {
                    height: 15rem !important;
                }

                #timer01 ul li.delimiter {
                    width: 1.5625rem;
                }

                #timer01 ul li.number .item .label > * {
                    margin-top: calc(0.5rem + 0.25em);
                }
            }

            @media (max-width: 360px) {
                #main > .inner {
                    --padding-horizontal: 1.125rem;
                    --padding-vertical: 1.125rem;
                    --spacing: 1.3125rem;
                }

                .container.style3 > .wrapper > .inner {
                    --gutters: 2.25rem;
                    --padding-horizontal: 1.5rem;
                    --padding-vertical: 2.25rem;
                }

                .container.style2 > .wrapper > .inner {
                    --gutters: 3rem;
                    --padding-horizontal: 1.5rem;
                    --padding-vertical: 2.25rem;
                }

                h1.style4, h2.style4, h3.style4, p.style4 {
                    font-size: 1.5em;
                }

                h1.style2, h2.style2, h3.style2, p.style2 {
                    font-size: 2.75em;
                }

                .icons.style1 {
                    gap: 0.5625rem;
                }

                .image.style3 .frame {
                    height: 13.125rem !important;
                }
            }
        </style>
        <noscript>
            <style>
                body {
                    overflow: auto !important;
                }

                body:after {
                    display: none !important;
                }

                #main > .inner {
                    opacity: 1.0 !important;
                }

                #main {
                    opacity: 1.0 !important;
                    transform: none !important;
                    transition: none !important;
                    filter: none !important;
                }
            </style>
        </noscript>
    </head>
    <body class="is-loading">
        <svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 40 40" display="none" width="0" height="0">
            <symbol id="icon-a9548a89fd2637c18d8725450a133652" viewBox="0 0 40 40">
                <path d="M18.5,5.6H21c0.7,0,1.3,0.2,1.8,0.6c0.5,0.4,0.7,1,0.7,1.7v13.8l5.8-5.8c0.5-0.5,1.1-0.7,1.8-0.7c0.7,0,1.3,0.2,1.8,0.7 l1.5,1.5c0.5,0.5,0.7,1.1,0.7,1.8c0,0.7-0.2,1.3-0.7,1.8L21.6,33.7c-0.5,0.5-1.1,0.7-1.8,0.7c-0.7,0-1.3-0.2-1.8-0.7L5.2,21 c-0.5-0.5-0.7-1.1-0.7-1.8s0.2-1.3,0.7-1.8l1.5-1.5c0.5-0.5,1.1-0.7,1.8-0.7c0.7,0,1.3,0.2,1.8,0.7l5.8,5.8V7.9 c0-0.7,0.2-1.2,0.7-1.7C17.3,5.8,17.8,5.6,18.5,5.6z"/>
            </symbol>
            <symbol id="icon-0fab58c8cba7ae847fa5ba32ea5a4bea" viewBox="0 0 40 40">
                <path d="M20.9,37L33,25.3c3-3,4.5-5.9,4.5-8.8c0-2.9-0.8-5.1-2.5-6.7c-1.6-1.6-3.9-2.4-6.8-2.4c-0.8,0-1.6,0.1-2.5,0.4 S24.1,8.5,23.3,9c-0.7,0.5-1.3,0.9-1.9,1.3c-0.5,0.4-1,0.9-1.5,1.3c-0.5-0.5-1-0.9-1.5-1.3C18,9.9,17.4,9.5,16.7,9 c-0.7-0.5-1.5-0.9-2.3-1.1s-1.7-0.4-2.5-0.4C9,7.5,6.7,8.3,5,9.9s-2.5,3.8-2.5,6.7c0,0.9,0.2,1.8,0.5,2.7c0.3,0.9,0.7,1.7,1,2.4 c0.4,0.6,0.8,1.3,1.3,1.9c0.5,0.6,0.9,1,1.1,1.3C6.7,25,6.9,25.2,7,25.3L19.1,37c0.2,0.2,0.5,0.4,0.9,0.4S20.6,37.3,20.9,37z"/>
            </symbol>
        </svg>
        <div id="wrapper">
            <div id="main">
                <div class="inner">
                    <div id="container01" class="style3 container default">
                        <div class="wrapper">
                            <div class="inner" data-onvisible-trigger="1">
                                <div id="image04" class="style1 image">
                                    <span class="frame">
                                        <img src="https://nguyenyennhi.carrd.co/assets/images/image04.jpg?v=f5384474" alt=""/>
                                    </span>
                                </div>
                                <h1 id="text01" class="style2">HAPPY BIRTHDAY</h1>
                                <p id="text16" class="style4">15.11.2022</p>
                                <ul id="icons02" class="style1 icons">
                                    <li>
                                        <a class="n01" href="#one">
                                            <svg>
                                                <use xlink:href="#icon-a9548a89fd2637c18d8725450a133652"></use>
                                            </svg>
                                            <span class="label">Arrow Down</span>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <hr id="divider02" class="style1">
                    <div id="container07" data-scroll-id="one" data-scroll-behavior="center" data-scroll-offset="0" data-scroll-invisible="1" class="style2 container columns">
                        <div class="wrapper">
                            <div class="inner" data-onvisible-trigger="1" data-reorder="1,0">
                                <div>
                                    <p id="text19" class="style4">Good evening, beautiful young woman sitting in front of the screen. You look strong, don &#039;t you? You &#039;re always being positive, trying to be an understanding and optimistic girl but your eyes are saying you &#039;re lying! I know you are not that strong, you are just a little girl, you also need to be loved and understood, you also need someone to give you the best.</p>
                                    <ul id="icons03" class="style1 icons">
                                        <li>
                                            <a class="n01" href="#two">
                                                <svg>
                                                    <use xlink:href="#icon-a9548a89fd2637c18d8725450a133652"></use>
                                                </svg>
                                                <span class="label">Arrow Down</span>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                                <div>
                                    <div id="image06" class="style3 image" data-position="center">
                                        <span class="frame">
                                            <img src="https://nguyenyennhi.carrd.co/assets/images/image06.jpg?v=f5384474" alt=""/>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr id="divider06" class="style1">
                    <div id="container06" data-scroll-id="two" data-scroll-behavior="default" data-scroll-offset="0" class="style2 container columns">
                        <div class="wrapper">
                            <div class="inner" data-onvisible-trigger="1" data-reorder="0,1">
                                <div>
                                    <div id="image05" class="style3 image" data-position="center">
                                        <span class="frame">
                                            <img src="https://nguyenyennhi.carrd.co/assets/images/image05.jpg?v=f5384474" alt=""/>
                                        </span>
                                    </div>
                                </div>
                                <div>
                                    <p id="text15" class="style4">Just be yourself, you don &#039;t need to be too understanding in order to get resentful and disadvantaged about yourself. You don &#039;t need to hide all your negative feelings because no one can heal a wound by acting like it doesn &#039;t hurt right?</p>
                                    <ul id="icons01" class="style1 icons">
                                        <li>
                                            <a class="n01" href="#three">
                                                <svg>
                                                    <use xlink:href="#icon-a9548a89fd2637c18d8725450a133652"></use>
                                                </svg>
                                                <span class="label">Arrow Down</span>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr id="divider01" class="style1">
                    <div id="container03" data-scroll-id="three" data-scroll-behavior="default" data-scroll-offset="0" class="style2 container columns">
                        <div class="wrapper">
                            <div class="inner" data-onvisible-trigger="1" data-reorder="1,0">
                                <div>
                                    <p id="text05" class="style4">Relax, my love, the past few days must have been hard for you to bear the pressure of life, right? At the moment, I don &#039;t have enough laughter to give for you but, let me buy back all your negativity and pressure...</p>
                                    <ul id="icons05" class="style1 icons">
                                        <li>
                                            <a class="n01" href="#four">
                                                <svg>
                                                    <use xlink:href="#icon-a9548a89fd2637c18d8725450a133652"></use>
                                                </svg>
                                                <span class="label">Arrow Down</span>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                                <div>
                                    <div id="image01" class="style3 image" data-position="center">
                                        <span class="frame">
                                            <img src="https://nguyenyennhi.carrd.co/assets/images/image01.jpg?v=f5384474" alt=""/>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr id="divider05" class="style1">
                    <div id="container04" data-scroll-id="four" data-scroll-behavior="default" data-scroll-offset="0" class="style2 container columns">
                        <div class="wrapper">
                            <div class="inner" data-onvisible-trigger="1" data-reorder="0,1">
                                <div>
                                    <div id="image02" class="style3 image" data-position="center">
                                        <span class="frame">
                                            <img src="https://nguyenyennhi.carrd.co/assets/images/image02.jpg?v=f5384474" alt=""/>
                                        </span>
                                    </div>
                                </div>
                                <div>
                                    <p id="text08" class="style4">You know what, when the first saw you, I told to myself that: Oh My God. Are there two glittering pearls lying still in your eyes ? You will never know how beautiful they are, so cherish and cherish them, please never let them were gotten wet by your tears.</p>
                                    <ul id="icons06" class="style1 icons">
                                        <li>
                                            <a class="n01" href="#five">
                                                <svg>
                                                    <use xlink:href="#icon-a9548a89fd2637c18d8725450a133652"></use>
                                                </svg>
                                                <span class="label">Arrow Down</span>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr id="divider03" class="style1">
                    <div id="container02" data-scroll-id="five" data-scroll-behavior="default" data-scroll-offset="0" class="style3 container default">
                        <div class="wrapper">
                            <div class="inner" data-onvisible-trigger="1">
                                <p id="text11" class="style4">Hmm, I have something to say to you, I &#039;ll be through with you up and down in the life. I hope you will always be happy, as you usually show...</p>
                                <div id="image03" class="style3 image" data-position="center">
                                    <span class="frame">
                                        <img src="https://nguyenyennhi.carrd.co/assets/images/image03.jpg?v=f5384474" alt=""/>
                                    </span>
                                </div>
                                <ul id="icons04" class="style1 icons">
                                    <li>
                                        <a class="n01" href="#six">
                                            <svg>
                                                <use xlink:href="#icon-a9548a89fd2637c18d8725450a133652"></use>
                                            </svg>
                                            <span class="label">Arrow Down</span>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <hr id="divider04" class="style1">
                    <div id="container05" data-scroll-id="six" data-scroll-behavior="default" data-scroll-offset="0" class="style3 container default">
                        <div class="wrapper">
                            <div class="inner" data-onvisible-trigger="1">
                                <div id="timer01" class="timer">
                                    <ul></ul>
                                </div>
                                <p id="text20" class="style4">I don &#039;t know what my future holds, but I hope you &#039;re in it.</p>
                                <ul id="icons07" class="style1 icons">
                                    <li>
                                        <a class="n01" href="https://theheartfromyennhi.w3spaces.com">
                                            <svg>
                                                <use xlink:href="#icon-0fab58c8cba7ae847fa5ba32ea5a4bea"></use>
                                            </svg>
                                            <span class="label">Heart</span>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div id="credits" class="icc-credits">
                        <span>
                            <a href="https://www.facebook.com/profile.php?id=100061765046615">Made by baole</a>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <script>
            (function() {
                var on = addEventListener
                  , $ = function(q) {
                    return document.querySelector(q)
                }
                  , $$ = function(q) {
                    return document.querySelectorAll(q)
                }
                  , $body = document.body
                  , $inner = $('.inner')
                  , client = (function() {
                    var o = {
                        browser: 'other',
                        browserVersion: 0,
                        os: 'other',
                        osVersion: 0,
                        mobile: false,
                        canUse: null,
                        flags: {
                            lsdUnits: false,
                        },
                    }, ua = navigator.userAgent, a, i;
                    a = [['firefox', /Firefox\/([0-9\.]+)/], ['edge', /Edge\/([0-9\.]+)/], ['safari', /Version\/([0-9\.]+).+Safari/], ['chrome', /Chrome\/([0-9\.]+)/], ['chrome', /CriOS\/([0-9\.]+)/], ['ie', /Trident\/.+rv:([0-9]+)/]];
                    for (i = 0; i < a.length; i++) {
                        if (ua.match(a[i][1])) {
                            o.browser = a[i][0];
                            o.browserVersion = parseFloat(RegExp.$1);
                            break;
                        }
                    }
                    a = [['ios', /([0-9_]+) like Mac OS X/, function(v) {
                        return v.replace('_', '.').replace('_', '');
                    }
                    ], ['ios', /CPU like Mac OS X/, function(v) {
                        return 0
                    }
                    ], ['ios', /iPad; CPU/, function(v) {
                        return 0
                    }
                    ], ['android', /Android ([0-9\.]+)/, null], ['mac', /Macintosh.+Mac OS X ([0-9_]+)/, function(v) {
                        return v.replace('_', '.').replace('_', '');
                    }
                    ], ['windows', /Windows NT ([0-9\.]+)/, null], ['undefined', /Undefined/, null], ];
                    for (i = 0; i < a.length; i++) {
                        if (ua.match(a[i][1])) {
                            o.os = a[i][0];
                            o.osVersion = parseFloat(a[i][2] ? (a[i][2])(RegExp.$1) : RegExp.$1);
                            break;
                        }
                    }
                    if (o.os == 'mac' && ('ontouchstart'in window) && ((screen.width == 1024 && screen.height == 1366) || (screen.width == 834 && screen.height == 1112) || (screen.width == 810 && screen.height == 1080) || (screen.width == 768 && screen.height == 1024)))
                        o.os = 'ios';
                    o.mobile = (o.os == 'android' || o.os == 'ios');
                    var _canUse = document.createElement('div');
                    o.canUse = function(property, value) {
                        var style;
                        style = _canUse.style;
                        if (!(property in style))
                            return false;
                        if (typeof value !== 'undefined') {
                            style[property] = value;
                            if (style[property] == '')
                                return false;
                        }
                        return true;
                    }
                    ;
                    o.flags.lsdUnits = o.canUse('width', '100dvw');
                    return o;
                }())
                  , trigger = function(t) {
                    dispatchEvent(new Event(t));
                }
                  , cssRules = function(selectorText) {
                    var ss = document.styleSheets, a = [], f = function(s) {
                        var r = s.cssRules, i;
                        for (i = 0; i < r.length; i++) {
                            if (r[i]instanceof CSSMediaRule && matchMedia(r[i].conditionText).matches)
                                (f)(r[i]);
                            else if (r[i]instanceof CSSStyleRule && r[i].selectorText == selectorText)
                                a.push(r[i]);
                        }
                    }, x, i;
                    for (i = 0; i < ss.length; i++)
                        f(ss[i]);
                    return a;
                }
                  , thisHash = function() {
                    var h = location.hash ? location.hash.substring(1) : null, a;
                    if (!h)
                        return null;
                    if (h.match(/\?/)) {
                        a = h.split('?');
                        h = a[0];
                        history.replaceState(undefined, undefined, '#' + h);
                        window.location.search = a[1];
                    }
                    if (h.length > 0 && !h.match(/^[a-zA-Z]/))
                        h = 'x' + h;
                    if (typeof h == 'string')
                        h = h.toLowerCase();
                    return h;
                }
                  , scrollToElement = function(e, style, duration) {
                    var y, cy, dy, start, easing, offset, f;
                    if (!e)
                        y = 0;
                    else {
                        offset = (e.dataset.scrollOffset ? parseInt(e.dataset.scrollOffset) : 0) * parseFloat(getComputedStyle(document.documentElement).fontSize);
                        switch (e.dataset.scrollBehavior ? e.dataset.scrollBehavior : 'default') {
                        case 'default':
                        default:
                            y = e.offsetTop + offset;
                            break;
                        case 'center':
                            if (e.offsetHeight < window.innerHeight)
                                y = e.offsetTop - ((window.innerHeight - e.offsetHeight) / 2) + offset;
                            else
                                y = e.offsetTop - offset;
                            break;
                        case 'previous':
                            if (e.previousElementSibling)
                                y = e.previousElementSibling.offsetTop + e.previousElementSibling.offsetHeight + offset;
                            else
                                y = e.offsetTop + offset;
                            break;
                        }
                    }
                    if (!style)
                        style = 'smooth';
                    if (!duration)
                        duration = 750;
                    if (style == 'instant') {
                        window.scrollTo(0, y);
                        return;
                    }
                    start = Date.now();
                    cy = window.scrollY;
                    dy = y - cy;
                    switch (style) {
                    case 'linear':
                        easing = function(t) {
                            return t
                        }
                        ;
                        break;
                    case 'smooth':
                        easing = function(t) {
                            return t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1
                        }
                        ;
                        break;
                    }
                    f = function() {
                        var t = Date.now() - start;
                        if (t >= duration)
                            window.scroll(0, y);
                        else {
                            window.scroll(0, cy + (dy * easing(t / duration)));
                            requestAnimationFrame(f);
                        }
                    }
                    ;
                    f();
                }
                  , scrollToTop = function() {
                    scrollToElement(null);
                }
                  , loadElements = function(parent) {
                    var a, e, x, i;
                    a = parent.querySelectorAll('iframe[data-src]:not([data-src=""])');
                    for (i = 0; i < a.length; i++) {
                        a[i].contentWindow.location.replace(a[i].dataset.src);
                        a[i].dataset.initialSrc = a[i].dataset.src;
                        a[i].dataset.src = '';
                    }
                    a = parent.querySelectorAll('video[autoplay]');
                    for (i = 0; i < a.length; i++) {
                        if (a[i].paused)
                            a[i].play();
                    }
                    e = parent.querySelector('[data-autofocus="1"]');
                    x = e ? e.tagName : null;
                    switch (x) {
                    case 'FORM':
                        e = e.querySelector('.field input, .field select, .field textarea');
                        if (e)
                            e.focus();
                        break;
                    default:
                        break;
                    }
                }
                  , unloadElements = function(parent) {
                    var a, e, x, i;
                    a = parent.querySelectorAll('iframe[data-src=""]');
                    for (i = 0; i < a.length; i++) {
                        if (a[i].dataset.srcUnload === '0')
                            continue;
                        if ('initialSrc'in a[i].dataset)
                            a[i].dataset.src = a[i].dataset.initialSrc;
                        else
                            a[i].dataset.src = a[i].src;
                        a[i].contentWindow.location.replace('about:blank');
                    }
                    a = parent.querySelectorAll('video');
                    for (i = 0; i < a.length; i++) {
                        if (!a[i].paused)
                            a[i].pause();
                    }
                    e = $(':focus');
                    if (e)
                        e.blur();
                };
                window._scrollToTop = scrollToTop;
                var thisURL = function() {
                    return window.location.href.replace(window.location.search, '').replace(/#$/, '');
                };
                var getVar = function(name) {
                    var a = window.location.search.substring(1).split('&'), b, k;
                    for (k in a) {
                        b = a[k].split('=');
                        if (b[0] == name)
                            return b[1];
                    }
                    return null;
                };
                var errors = {
                    handle: function(handler) {
                        window.onerror = function(message, url, line, column, error) {
                            (handler)(error.message);
                            return true;
                        }
                        ;
                    },
                    unhandle: function() {
                        window.onerror = null;
                    }
                };
                on('load', function() {
                    setTimeout(function() {
                        $body.className = $body.className.replace(/\bis-loading\b/, 'is-playing');
                        setTimeout(function() {
                            $body.className = $body.className.replace(/\bis-playing\b/, 'is-ready');
                        }, 1250);
                    }, 100);
                });
                loadElements(document.body);
                (function() {
                    window._scrollToTop = function() {
                        scrollToElement(null);
                        if (window.location.hash) {
                            history.pushState(null, null, '.');
                        }
                    }
                    ;
                    if ('scrollRestoration'in history)
                        history.scrollRestoration = 'manual';
                    on('load', function() {
                        var initialScrollPoint, h;
                        h = thisHash();
                        if (h && !h.match(/^[a-zA-Z0-9\-]+$/))
                            h = null;
                        initialScrollPoint = $('[data-scroll-id="' + h + '"]');
                        if (initialScrollPoint)
                            scrollToElement(initialScrollPoint, 'instant');
                    });
                    on('hashchange', function(event) {
                        var scrollPoint, h, pos;
                        h = thisHash();
                        if (h && !h.match(/^[a-zA-Z0-9\-]+$/))
                            return false;
                        scrollPoint = $('[data-scroll-id="' + h + '"]');
                        if (scrollPoint)
                            scrollToElement(scrollPoint);
                        else
                            scrollToElement(null);
                        return false;
                    });
                    on('click', function(event) {
                        var t = event.target, tagName = t.tagName.toUpperCase(), scrollPoint;
                        switch (tagName) {
                        case 'IMG':
                        case 'SVG':
                        case 'USE':
                        case 'U':
                        case 'STRONG':
                        case 'EM':
                        case 'CODE':
                        case 'S':
                        case 'MARK':
                        case 'SPAN':
                            while (!!(t = t.parentElement))
                                if (t.tagName == 'A')
                                    break;
                            if (!t)
                                return;
                            break;
                        default:
                            break;
                        }
                        if (t.tagName == 'A' && t.getAttribute('href').substr(0, 1) == '#') {
                            if (!!(scrollPoint = $('[data-scroll-id="' + t.hash.substr(1) + '"][data-scroll-invisible="1"]'))) {
                                event.preventDefault();
                                scrollToElement(scrollPoint);
                            } else if (t.hash == window.location.hash) {
                                event.preventDefault();
                                history.replaceState(undefined, undefined, '#');
                                location.replace(t.hash);
                            }
                        }
                    });
                }
                )();
                var style, sheet, rule;
                style = document.createElement('style');
                style.appendChild(document.createTextNode(''));
                document.head.appendChild(style);
                sheet = style.sheet;
                if (client.mobile) {
                    (function() {
                        if (client.flags.lsdUnits) {
                            document.documentElement.style.setProperty('--viewport-height', '100dvh');
                            document.documentElement.style.setProperty('--background-height', '100lvh');
                        } else {
                            var f = function() {
                                document.documentElement.style.setProperty('--viewport-height', window.innerHeight + 'px');
                                document.documentElement.style.setProperty('--background-height', (window.innerHeight + 250) + 'px');
                            };
                            on('load', f);
                            on('resize', f);
                            on('orientationchange', function() {
                                setTimeout(function() {
                                    (f)();
                                }, 100);
                            });
                        }
                    }
                    )();
                }
                if (client.os == 'android') {
                    (function() {
                        sheet.insertRule('body::after { }', 0);
                        rule = sheet.cssRules[0];
                        var f = function() {
                            rule.style.cssText = 'height: ' + (Math.max(screen.width, screen.height)) + 'px';
                        };
                        on('load', f);
                        on('orientationchange', f);
                        on('touchmove', f);
                    }
                    )();
                    $body.classList.add('is-touch');
                } else if (client.os == 'ios') {
                    if (client.osVersion <= 11)
                        (function() {
                            sheet.insertRule('body::after { }', 0);
                            rule = sheet.cssRules[0];
                            rule.style.cssText = '-webkit-transform: scale(1.0)';
                        }
                        )();
                    if (client.osVersion <= 11)
                        (function() {
                            sheet.insertRule('body.ios-focus-fix::before { }', 0);
                            rule = sheet.cssRules[0];
                            rule.style.cssText = 'height: calc(100% + 60px)';
                            on('focus', function(event) {
                                $body.classList.add('ios-focus-fix');
                            }, true);
                            on('blur', function(event) {
                                $body.classList.remove('ios-focus-fix');
                            }, true);
                        }
                        )();
                    $body.classList.add('is-touch');
                }
                (function() {
                    var breakpoints = {
                        small: '(max-width: 736px)',
                        medium: '(max-width: 980px)',
                    }
                      , elements = $$('[data-reorder]');
                    elements.forEach(function(e) {
                        var desktop = [], mobile = [], state = false, query, a, x, ce, f;
                        if ('reorderBreakpoint'in e.dataset && e.dataset.reorderBreakpoint in breakpoints)
                            query = breakpoints[e.dataset.reorderBreakpoint];
                        else
                            query = breakpoints.small;
                        for (ce of e.childNodes) {
                            if (ce.nodeType != 1)
                                continue;
                            desktop.push(ce);
                        }
                        a = e.dataset.reorder.split(',');
                        for (x of a)
                            mobile.push(desktop[parseInt(x)]);
                        f = function() {
                            var order = null, ce;
                            if (window.matchMedia(query).matches) {
                                if (!state) {
                                    state = true;
                                    for (ce of mobile)
                                        e.appendChild(ce);
                                }
                            } else {
                                if (state) {
                                    state = false;
                                    for (ce of desktop)
                                        e.appendChild(ce);
                                }
                            }
                        }
                        ;
                        on('resize', f);
                        on('orientationchange', f);
                        on('load', f);
                        on('fullscreenchange', f);
                    });
                }
                )();
                var scrollEvents = {
                    items: [],
                    add: function(o) {
                        this.items.push({
                            element: o.element,
                            triggerElement: (('triggerElement'in o && o.triggerElement) ? o.triggerElement : o.element),
                            enter: ('enter'in o ? o.enter : null),
                            leave: ('leave'in o ? o.leave : null),
                            mode: ('mode'in o ? o.mode : 1),
                            offset: ('offset'in o ? o.offset : 0),
                            initialState: ('initialState'in o ? o.initialState : null),
                            state: false,
                        });
                    },
                    handler: function() {
                        var height, top, bottom, scrollPad;
                        if (client.os == 'ios') {
                            height = document.documentElement.clientHeight;
                            top = document.body.scrollTop + window.scrollY;
                            bottom = top + height;
                            scrollPad = 125;
                        } else {
                            height = document.documentElement.clientHeight;
                            top = document.documentElement.scrollTop;
                            bottom = top + height;
                            scrollPad = 0;
                        }
                        scrollEvents.items.forEach(function(item) {
                            var bcr, elementTop, elementBottom, state, a, b;
                            if (!item.enter && !item.leave)
                                return true;
                            if (!item.triggerElement || item.triggerElement.offsetParent === null)
                                return true;
                            bcr = item.triggerElement.getBoundingClientRect();
                            elementTop = top + Math.floor(bcr.top);
                            elementBottom = elementTop + bcr.height;
                            if (item.initialState !== null) {
                                state = item.initialState;
                                item.initialState = null;
                            } else {
                                switch (item.mode) {
                                case 1:
                                default:
                                    state = (bottom > (elementTop - item.offset) && top < (elementBottom + item.offset));
                                    break;
                                case 2:
                                    a = (top + (height * 0.5));
                                    state = (a > (elementTop - item.offset) && a < (elementBottom + item.offset));
                                    break;
                                case 3:
                                    a = top + (height * 0.25);
                                    if (a - (height * 0.375) <= 0)
                                        a = 0;
                                    b = top + (height * 0.75);
                                    if (b + (height * 0.375) >= document.body.scrollHeight - scrollPad)
                                        b = document.body.scrollHeight + scrollPad;
                                    state = (b > (elementTop - item.offset) && a < (elementBottom + item.offset));
                                    break;
                                }
                            }
                            if (state != item.state) {
                                item.state = state;
                                if (item.state) {
                                    if (item.enter) {
                                        (item.enter).apply(item.element);
                                        if (!item.leave)
                                            item.enter = null;
                                    }
                                } else {
                                    if (item.leave) {
                                        (item.leave).apply(item.element);
                                        if (!item.enter)
                                            item.leave = null;
                                    }
                                }
                            }
                        });
                    },
                    init: function() {
                        on('load', this.handler);
                        on('resize', this.handler);
                        on('scroll', this.handler);
                        (this.handler)();
                    }
                };
                scrollEvents.init();
                var onvisible = {
                    effects: {
                        'blur-in': {
                            transition: function(speed, delay) {
                                return 'opacity ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '') + ', ' + 'filter ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '');
                            },
                            rewind: function(intensity) {
                                this.style.opacity = 0;
                                this.style.filter = 'blur(' + (0.25 * intensity) + 'rem)';
                            },
                            play: function() {
                                this.style.opacity = 1;
                                this.style.filter = 'none';
                            },
                        },
                        'zoom-in': {
                            transition: function(speed, delay) {
                                return 'opacity ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '') + ', ' + 'transform ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '');
                            },
                            rewind: function(intensity, alt) {
                                this.style.opacity = 0;
                                this.style.transform = 'scale(' + (1 - ((alt ? 0.25 : 0.05) * intensity)) + ')';
                            },
                            play: function() {
                                this.style.opacity = 1;
                                this.style.transform = 'none';
                            },
                        },
                        'zoom-out': {
                            transition: function(speed, delay) {
                                return 'opacity ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '') + ', ' + 'transform ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '');
                            },
                            rewind: function(intensity, alt) {
                                this.style.opacity = 0;
                                this.style.transform = 'scale(' + (1 + ((alt ? 0.25 : 0.05) * intensity)) + ')';
                            },
                            play: function() {
                                this.style.opacity = 1;
                                this.style.transform = 'none';
                            },
                        },
                        'slide-left': {
                            transition: function(speed, delay) {
                                return 'transform ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '');
                            },
                            rewind: function() {
                                this.style.transform = 'translateX(100vw)';
                            },
                            play: function() {
                                this.style.transform = 'none';
                            },
                        },
                        'slide-right': {
                            transition: function(speed, delay) {
                                return 'transform ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '');
                            },
                            rewind: function() {
                                this.style.transform = 'translateX(-100vw)';
                            },
                            play: function() {
                                this.style.transform = 'none';
                            },
                        },
                        'flip-forward': {
                            transition: function(speed, delay) {
                                return 'opacity ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '') + ', ' + 'transform ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '');
                            },
                            rewind: function(intensity, alt) {
                                this.style.opacity = 0;
                                this.style.transformOrigin = '50% 50%';
                                this.style.transform = 'perspective(1000px) rotateX(' + ((alt ? 45 : 15) * intensity) + 'deg)';
                            },
                            play: function() {
                                this.style.opacity = 1;
                                this.style.transform = 'none';
                            },
                        },
                        'flip-backward': {
                            transition: function(speed, delay) {
                                return 'opacity ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '') + ', ' + 'transform ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '');
                            },
                            rewind: function(intensity, alt) {
                                this.style.opacity = 0;
                                this.style.transformOrigin = '50% 50%';
                                this.style.transform = 'perspective(1000px) rotateX(' + ((alt ? -45 : -15) * intensity) + 'deg)';
                            },
                            play: function() {
                                this.style.opacity = 1;
                                this.style.transform = 'none';
                            },
                        },
                        'flip-left': {
                            transition: function(speed, delay) {
                                return 'opacity ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '') + ', ' + 'transform ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '');
                            },
                            rewind: function(intensity, alt) {
                                this.style.opacity = 0;
                                this.style.transformOrigin = '50% 50%';
                                this.style.transform = 'perspective(1000px) rotateY(' + ((alt ? 45 : 15) * intensity) + 'deg)';
                            },
                            play: function() {
                                this.style.opacity = 1;
                                this.style.transform = 'none';
                            },
                        },
                        'flip-right': {
                            transition: function(speed, delay) {
                                return 'opacity ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '') + ', ' + 'transform ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '');
                            },
                            rewind: function(intensity, alt) {
                                this.style.opacity = 0;
                                this.style.transformOrigin = '50% 50%';
                                this.style.transform = 'perspective(1000px) rotateY(' + ((alt ? -45 : -15) * intensity) + 'deg)';
                            },
                            play: function() {
                                this.style.opacity = 1;
                                this.style.transform = 'none';
                            },
                        },
                        'tilt-left': {
                            transition: function(speed, delay) {
                                return 'opacity ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '') + ', ' + 'transform ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '');
                            },
                            rewind: function(intensity, alt) {
                                this.style.opacity = 0;
                                this.style.transform = 'rotate(' + ((alt ? 45 : 5) * intensity) + 'deg)';
                            },
                            play: function() {
                                this.style.opacity = 1;
                                this.style.transform = 'none';
                            },
                        },
                        'tilt-right': {
                            transition: function(speed, delay) {
                                return 'opacity ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '') + ', ' + 'transform ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '');
                            },
                            rewind: function(intensity, alt) {
                                this.style.opacity = 0;
                                this.style.transform = 'rotate(' + ((alt ? -45 : -5) * intensity) + 'deg)';
                            },
                            play: function() {
                                this.style.opacity = 1;
                                this.style.transform = 'none';
                            },
                        },
                        'fade-right': {
                            transition: function(speed, delay) {
                                return 'opacity ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '') + ', ' + 'transform ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '');
                            },
                            rewind: function(intensity) {
                                this.style.opacity = 0;
                                this.style.transform = 'translateX(' + (-1.5 * intensity) + 'rem)';
                            },
                            play: function() {
                                this.style.opacity = 1;
                                this.style.transform = 'none';
                            },
                        },
                        'fade-left': {
                            transition: function(speed, delay) {
                                return 'opacity ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '') + ', ' + 'transform ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '');
                            },
                            rewind: function(intensity) {
                                this.style.opacity = 0;
                                this.style.transform = 'translateX(' + (1.5 * intensity) + 'rem)';
                            },
                            play: function() {
                                this.style.opacity = 1;
                                this.style.transform = 'none';
                            },
                        },
                        'fade-down': {
                            transition: function(speed, delay) {
                                return 'opacity ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '') + ', ' + 'transform ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '');
                            },
                            rewind: function(intensity) {
                                this.style.opacity = 0;
                                this.style.transform = 'translateY(' + (-1.5 * intensity) + 'rem)';
                            },
                            play: function() {
                                this.style.opacity = 1;
                                this.style.transform = 'none';
                            },
                        },
                        'fade-up': {
                            transition: function(speed, delay) {
                                return 'opacity ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '') + ', ' + 'transform ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '');
                            },
                            rewind: function(intensity) {
                                this.style.opacity = 0;
                                this.style.transform = 'translateY(' + (1.5 * intensity) + 'rem)';
                            },
                            play: function() {
                                this.style.opacity = 1;
                                this.style.transform = 'none';
                            },
                        },
                        'fade-in': {
                            transition: function(speed, delay) {
                                return 'opacity ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '');
                            },
                            rewind: function() {
                                this.style.opacity = 0;
                            },
                            play: function() {
                                this.style.opacity = 1;
                            },
                        },
                        'fade-in-background': {
                            custom: true,
                            transition: function(speed, delay) {
                                this.style.setProperty('--onvisible-speed', speed + 's');
                                if (delay)
                                    this.style.setProperty('--onvisible-delay', delay + 's');
                            },
                            rewind: function() {
                                this.style.removeProperty('--onvisible-background-color');
                            },
                            play: function() {
                                this.style.setProperty('--onvisible-background-color', 'rgba(0,0,0,0.001)');
                            },
                        },
                        'zoom-in-image': {
                            target: 'img',
                            transition: function(speed, delay) {
                                return 'transform ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '');
                            },
                            rewind: function() {
                                this.style.transform = 'scale(1)';
                            },
                            play: function(intensity) {
                                this.style.transform = 'scale(' + (1 + (0.1 * intensity)) + ')';
                            },
                        },
                        'zoom-out-image': {
                            target: 'img',
                            transition: function(speed, delay) {
                                return 'transform ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '');
                            },
                            rewind: function(intensity) {
                                this.style.transform = 'scale(' + (1 + (0.1 * intensity)) + ')';
                            },
                            play: function() {
                                this.style.transform = 'none';
                            },
                        },
                        'focus-image': {
                            target: 'img',
                            transition: function(speed, delay) {
                                return 'transform ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '') + ', ' + 'filter ' + speed + 's ease' + (delay ? ' ' + delay + 's' : '');
                            },
                            rewind: function(intensity) {
                                this.style.transform = 'scale(' + (1 + (0.05 * intensity)) + ')';
                                this.style.filter = 'blur(' + (0.25 * intensity) + 'rem)';
                            },
                            play: function(intensity) {
                                this.style.transform = 'none';
                                this.style.filter = 'none';
                            },
                        },
                    },
                    add: function(selector, settings) {
                        var style = settings.style in this.effects ? settings.style : 'fade'
                          , speed = parseInt('speed'in settings ? settings.speed : 1000) / 1000
                          , intensity = ((parseInt('intensity'in settings ? settings.intensity : 5) / 10) * 1.75) + 0.25
                          , delay = parseInt('delay'in settings ? settings.delay : 0) / 1000
                          , offset = parseInt('offset'in settings ? settings.offset : 0)
                          , mode = parseInt('mode'in settings ? settings.mode : 3)
                          , replay = 'replay'in settings ? settings.replay : false
                          , stagger = 'stagger'in settings ? (parseInt(settings.stagger) > -125 ? (parseInt(settings.stagger) / 1000) : false) : false
                          , staggerOrder = 'staggerOrder'in settings ? settings.staggerOrder : 'default'
                          , state = 'state'in settings ? settings.state : null
                          , effect = this.effects[style];
                        if ('CARRD_DISABLE_ANIMATION'in window) {
                            if (style == 'fade-in-background')
                                $$(selector).forEach(function(e) {
                                    e.style.setProperty('--onvisible-background-color', 'rgba(0,0,0,0.001)');
                                });
                            return;
                        }
                        $$(selector).forEach(function(e) {
                            var children = (stagger !== false) ? e.querySelectorAll(':scope > li, :scope ul > li') : null, enter = function(staggerDelay=0) {
                                var _this = this, transitionOrig;
                                if (effect.target)
                                    _this = this.querySelector(effect.target);
                                if (!effect.custom) {
                                    transitionOrig = _this.style.transition;
                                    _this.style.setProperty('backface-visibility', 'hidden');
                                    _this.style.transition = effect.transition(speed, delay + staggerDelay);
                                } else
                                    effect.transition.apply(_this, [speed, delay + staggerDelay]);
                                effect.play.apply(_this, [intensity, !!children]);
                                if (!effect.custom)
                                    setTimeout(function() {
                                        _this.style.removeProperty('backface-visibility');
                                        _this.style.transition = transitionOrig;
                                    }, (speed + delay + staggerDelay) * 1000 * 2);
                            }, leave = function() {
                                var _this = this, transitionOrig;
                                if (effect.target)
                                    _this = this.querySelector(effect.target);
                                if (!effect.custom) {
                                    transitionOrig = _this.style.transition;
                                    _this.style.setProperty('backface-visibility', 'hidden');
                                    _this.style.transition = effect.transition(speed);
                                } else
                                    effect.transition.apply(_this, [speed]);
                                effect.rewind.apply(_this, [intensity, !!children]);
                                if (!effect.custom)
                                    setTimeout(function() {
                                        _this.style.removeProperty('backface-visibility');
                                        _this.style.transition = transitionOrig;
                                    }, speed * 1000 * 2);
                            }, targetElement, triggerElement;
                            if (effect.target)
                                targetElement = e.querySelector(effect.target);
                            else
                                targetElement = e;
                            if (children)
                                children.forEach(function(targetElement) {
                                    effect.rewind.apply(targetElement, [intensity, true]);
                                });
                            else
                                effect.rewind.apply(targetElement, [intensity]);
                            triggerElement = e;
                            if (e.parentNode) {
                                if (e.parentNode.dataset.onvisibleTrigger)
                                    triggerElement = e.parentNode;
                                else if (e.parentNode.parentNode) {
                                    if (e.parentNode.parentNode.dataset.onvisibleTrigger)
                                        triggerElement = e.parentNode.parentNode;
                                }
                            }
                            scrollEvents.add({
                                element: e,
                                triggerElement: triggerElement,
                                offset: offset,
                                mode: mode,
                                initialState: state,
                                enter: children ? function() {
                                    var staggerDelay = 0, childHandler = function(e) {
                                        enter.apply(e, [staggerDelay]);
                                        staggerDelay += stagger;
                                    }, a;
                                    if (staggerOrder == 'default') {
                                        children.forEach(childHandler);
                                    } else {
                                        a = Array.from(children);
                                        switch (staggerOrder) {
                                        case 'reverse':
                                            a.reverse();
                                            break;
                                        case 'random':
                                            a.sort(function() {
                                                return Math.random() - 0.5;
                                            });
                                            break;
                                        }
                                        a.forEach(childHandler);
                                    }
                                }
                                : enter,
                                leave: (replay ? (children ? function() {
                                    children.forEach(function(e) {
                                        leave.apply(e);
                                    });
                                }
                                : leave) : null),
                            });
                        });
                    },
                };
                function timer(id, options) {
                    var _this = this, f;
                    this.id = id;
                    this.timestamp = options.timestamp;
                    this.duration = options.duration;
                    this.mode = options.mode;
                    this.precision = options.precision;
                    this.completeUrl = options.completeUrl;
                    this.completion = options.completion;
                    this.persistent = options.persistent;
                    this.labelStyle = options.labelStyle;
                    this.completed = false;
                    this.status = null;
                    this.$timer = document.getElementById(this.id);
                    this.$parent = document.querySelector('#' + _this.$timer.id + ' ul');
                    this.days = {
                        $li: null,
                        $digit: null,
                        $components: null
                    };
                    this.hours = {
                        $li: null,
                        $digit: null,
                        $components: null
                    };
                    this.minutes = {
                        $li: null,
                        $digit: null,
                        $components: null
                    };
                    this.seconds = {
                        $li: null,
                        $digit: null,
                        $components: null
                    };
                    this.init();
                }
                ;timer.prototype.init = function() {
                    var _this = this, kt, kd;
                    kt = this.id + '-timestamp';
                    kd = this.id + '-duration';
                    switch (this.mode) {
                    case 'duration':
                        this.timestamp = parseInt(Date.now() / 1000) + this.duration;
                        if (this.persistent) {
                            if (registry.get(kd) != this.duration)
                                registry.unset(kt);
                            registry.set(kd, this.duration);
                            if (registry.exists(kt))
                                this.timestamp = parseInt(registry.get(kt));
                            else
                                registry.set(kt, this.timestamp);
                        } else {
                            if (registry.exists(kt))
                                registry.unset(kt);
                            if (registry.exists(kd))
                                registry.unset(kd);
                        }
                        break;
                    default:
                        break;
                    }
                    window.setInterval(function() {
                        _this.updateDigits();
                        _this.updateSize();
                    }, 250);
                    this.updateDigits();
                    on('resize', function() {
                        _this.updateSize();
                    });
                    this.updateSize();
                }
                ;
                timer.prototype.updateSize = function() {
                    var $items, $item, $digit, $components, $component, $label, $sublabel, $symbols, w, iw, h, f, i, j, found;
                    $items = document.querySelectorAll('#' + this.$timer.id + ' ul li .item');
                    $symbols = document.querySelectorAll('#' + this.$timer.id + ' .symbol');
                    $components = document.querySelectorAll('#' + this.$timer.id + ' .component');
                    h = 0;
                    f = 0;
                    for (j = 0; j < $components.length; j++) {
                        $components[j].style.lineHeight = '';
                        $components[j].style.height = '';
                    }
                    for (j = 0; j < $symbols.length; j++) {
                        $symbols[j].style.fontSize = '';
                        $symbols[j].style.lineHeight = '';
                        $symbols[j].style.height = '';
                    }
                    for (i = 0; i < $items.length; i++) {
                        $item = $items[i];
                        $component = $item.children[0].children[0];
                        w = $component.offsetWidth;
                        iw = $item.offsetWidth;
                        $digit = $item.children[0];
                        $digit.style.fontSize = '';
                        $digit.style.fontSize = (w * 1.65) + 'px';
                        h = Math.max(h, $digit.offsetHeight);
                        f = Math.max(f, (w * 1.65));
                        if ($item.children.length > 1) {
                            $label = $item.children[1];
                            found = false;
                            for (j = 0; j < $label.children.length; j++) {
                                $sublabel = $label.children[j];
                                $sublabel.style.display = '';
                                if (!found && $sublabel.offsetWidth < iw) {
                                    found = true;
                                    $sublabel.style.display = '';
                                } else
                                    $sublabel.style.display = 'none';
                            }
                        }
                    }
                    if ($items.length == 1) {
                        var x = $items[0].children[0]
                          , xs = getComputedStyle(x)
                          , xsa = getComputedStyle(x, ':after');
                        if (xsa.content != 'none')
                            h = parseInt(xsa.height) - parseInt(xs.marginTop) - parseInt(xs.marginBottom) + 24;
                    }
                    for (j = 0; j < $components.length; j++) {
                        $components[j].style.lineHeight = h + 'px';
                        $components[j].style.height = h + 'px';
                    }
                    for (j = 0; j < $symbols.length; j++) {
                        $symbols[j].style.fontSize = (f * 0.5) + 'px';
                        $symbols[j].style.lineHeight = h + 'px';
                        $symbols[j].style.height = h + 'px';
                    }
                    this.$parent.style.height = '';
                    this.$parent.style.height = this.$parent.offsetHeight + 'px';
                }
                ;
                timer.prototype.updateDigits = function() {
                    var _this = this, x = [{
                        class: 'days',
                        digit: 0,
                        label: {
                            full: 'Days',
                            abbreviated: 'Days',
                            initialed: 'D'
                        }
                    }, {
                        class: 'hours',
                        digit: 0,
                        label: {
                            full: 'Hours',
                            abbreviated: 'Hrs',
                            initialed: 'H'
                        }
                    }, {
                        class: 'minutes',
                        digit: 0,
                        label: {
                            full: 'Minutes',
                            abbreviated: 'Mins',
                            initialed: 'M'
                        }
                    }, {
                        class: 'seconds',
                        digit: 0,
                        label: {
                            full: 'Seconds',
                            abbreviated: 'Secs',
                            initialed: 'S'
                        }
                    }, ], now, diff, zeros, status, i, j, x, z, t, s;
                    now = parseInt(Date.now() / 1000);
                    switch (this.mode) {
                    case 'countdown':
                    case 'duration':
                        if (this.timestamp >= now)
                            diff = this.timestamp - now;
                        else {
                            diff = 0;
                            if (!this.completed) {
                                this.completed = true;
                                if (this.completion)
                                    (this.completion)();
                                if (this.completeUrl)
                                    window.setTimeout(function() {
                                        window.location.href = _this.completeUrl;
                                    }, 1000);
                            }
                        }
                        break;
                    default:
                    case 'default':
                        if (this.timestamp >= now)
                            diff = this.timestamp - now;
                        else
                            diff = now - this.timestamp;
                        break;
                    }
                    x[0].digit = Math.floor(diff / 86400);
                    diff -= x[0].digit * 86400;
                    x[1].digit = Math.floor(diff / 3600);
                    diff -= x[1].digit * 3600;
                    x[2].digit = Math.floor(diff / 60);
                    diff -= x[2].digit * 60;
                    x[3].digit = diff;
                    zeros = 0;
                    for (i = 0; i < x.length; i++)
                        if (x[i].digit == 0)
                            zeros++;
                        else
                            break;
                    while (zeros > 0 && x.length > this.precision) {
                        x.shift();
                        zeros--;
                    }
                    z = [];
                    for (i = 0; i < x.length; i++)
                        z.push(x[i].class);
                    status = z.join('-');
                    if (status == this.status) {
                        var $digit, $components;
                        for (i = 0; i < x.length; i++) {
                            $digit = document.querySelector('#' + this.id + ' .' + x[i].class + ' .digit');
                            $components = document.querySelectorAll('#' + this.id + ' .' + x[i].class + ' .digit .component');
                            if (!$digit)
                                continue;
                            z = [];
                            t = String(x[i].digit);
                            if (x[i].digit < 10) {
                                z.push('0');
                                z.push(t);
                            } else
                                for (j = 0; j < t.length; j++)
                                    z.push(t.substr(j, 1));
                            $digit.classList.remove('count1', 'count2', 'count3', 'count4');
                            $digit.classList.add('count' + z.length);
                            if ($components.length == z.length) {
                                for (j = 0; j < $components.length && j < z.length; j++)
                                    $components[j].innerHTML = z[j];
                            } else {
                                s = '';
                                for (j = 0; j < $components.length && j < z.length; j++)
                                    s += '<span class="component x' + Math.random() + '">' + z[j] + '</span>';
                                $digit.innerHTML = s;
                            }
                        }
                    } else {
                        s = '';
                        for (i = 0; i < x.length && i < this.precision; i++) {
                            z = [];
                            t = String(x[i].digit);
                            if (x[i].digit < 10) {
                                z.push('0');
                                z.push(t);
                            } else
                                for (j = 0; j < t.length; j++)
                                    z.push(t.substr(j, 1));
                            if (i > 0)
                                s += '<li class="delimiter">' + '<span class="symbol">:</span>' + '</li>';
                            s += '<li class="number ' + x[i].class + '">' + '<div class="item">';
                            s += '<span class="digit count' + t.length + '">';
                            for (j = 0; j < z.length; j++)
                                s += '<span class="component">' + z[j] + '</span>';
                            s += '</span>';
                            switch (this.labelStyle) {
                            default:
                            case 'full':
                                s += '<span class="label">' + '<span class="full">' + x[i].label.full + '</span>' + '<span class="abbreviated">' + x[i].label.abbreviated + '</span>' + '<span class="initialed">' + x[i].label.initialed + '</span>' + '</span>';
                                break;
                            case 'abbreviated':
                                s += '<span class="label">' + '<span class="abbreviated">' + x[i].label.abbreviated + '</span>' + '<span class="initialed">' + x[i].label.initialed + '</span>' + '</span>';
                                break;
                            case 'initialed':
                                s += '<span class="label">' + '<span class="initialed">' + x[i].label.initialed + '</span>' + '</span>';
                                break;
                            case 'none':
                                break;
                            }
                            s += '</div>' + '</li>';
                        }
                        _this.$parent.innerHTML = s;
                        this.status = status;
                    }
                }
                ;
                new timer('timer01',{
                    mode: 'default',
                    precision: 4,
                    completeUrl: '',
                    timestamp: 1663259728,
                    labelStyle: 'full'
                });
                onvisible.add('.icons.style1', {
                    style: 'fade-up',
                    speed: 1000,
                    intensity: 0,
                    delay: 0,
                    replay: true
                });
                onvisible.add('.image.style3', {
                    style: 'fade-right',
                    speed: 1000,
                    intensity: 5,
                    delay: 0,
                    staggerOrder: '',
                    replay: false
                });
                onvisible.add('#timer01', {
                    style: 'flip-backward',
                    speed: 1000,
                    intensity: 5,
                    delay: 0,
                    replay: true
                });
                onvisible.add('.image.style1', {
                    style: 'fade-up',
                    speed: 1625,
                    intensity: 10,
                    delay: 0,
                    staggerOrder: '',
                    replay: true
                });
                onvisible.add('h1.style2, h2.style2, h3.style2, p.style2', {
                    style: 'fade-left',
                    speed: 1000,
                    intensity: 0,
                    delay: 0,
                    staggerOrder: '',
                    replay: true
                });
            }
            )();
        </script>
    </body>
</html>
